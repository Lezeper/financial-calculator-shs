{"version":3,"sources":["app.min.js"],"names":["app","angular","module","controller","$scope","meanData","$rootScope","year","Date","getFullYear","directive","restrict","scope","ngModel","link","config","$routeProvider","$locationProvider","when","templateUrl","controllerAs","otherwise","html5Mode","$uibModal","$window","_this","this","rewardRulesInDB","accountDefaultList","rewardStrategy","rewardCategory","rewardRatio","rewardRule","rewardMax","redeemMin","startDate","endDate","newRewardRules","addRewardRuleRow","push","copy","deleteRewardRuleRow","index","splice","getAccountDefault","then","res","data","getRewardRules","removeAccountDefault","id","deleteAccountDefault","alert","msg","location","reload","err","console","error","submitAccountDefault","newAccountDefault","selectedRewardRuleIdList","forEach","rrdb","isSelected","_id","obj","addAccountDefault","showRewardRuleModal","open","animation","size","mockService","$sce","getAccounts","accounts","accountsDetails","accountUpdatedDate","date","removeAccount","confirm","deleteAccount","fastUpadteProperty","property","oldVal","account","newVal","prompt","updatedDate","updateAccount","showAccountModal","title","resolve","saveAccountPageTitle","settings","canTransaction","getSettings","accountConfirmDate","updateSettings","canHasTransaction","transaction","length","avaliableAccounts","$log","showAddTransaction","showAddRecurring","removeTransaction","deleteTransaction","removeRecurring","deleteRecurringPayment","getRecurringPayments","recurringPayments","getTransactions","transactioins","utilService","$q","showStatements","events","financeDangerDate","statements","calendarDisplayerOptions","selectedDate","getMonth","getDate","getDayClass","mode","dayToCheck","setHours","i","eventDay","financeStatus","showSelectedDateModal","statement","result","calculatePending","pending","pendingTransactions","pt","amount","doPredict","moment","dateFormat","doFinancialPrediction","lowestBalanceInAccountList","customClass","minDate","maxDate","dateSelected","undefined","$uibModalInstance","nAccount","saveAccountFlag","transactionCategoryList","accountDefault","payByAccounts","setSaveAccountFlag","bool","accountName","dueDate","closingDate","minPayment","creditLine","balance","lastBalance","threshold","resetEdit","resetSubmit","submit","edit","apr0Valid","apr0Date","rewards","rewardRules","payBy","newPendingTransaction","type","category","description","addPendingTransactionRow","deletePendingTransactionRow","addAccount","message","cancelModal","dismiss","editAccount","origin","Object","keys","prop","selectedAccountDefault","ad","adRewardRule","rule","earned","getAccountsNotCreditCard","ancc","tc","transactionCategory","service","$http","financialServerUrl","get","put","addRecurringPayment","recurring","post","isPending","addTransaction","updateTransaction","addRewardRule","updateRewardRule","deleteRewardRule","need","getMockTransactions","flag","format","log","accountType","transactionType","$location","isActive","viewLocation","path","split","newTransaction","newRecurringPayment","component","bindings","readonly"],"mappings":"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","file":"app.min.js","sourcesContent":["var app = angular.module('app', ['ngRoute', 'ui.bootstrap', 'ngSanitize']);\r\n(function () {\r\n  app.controller('footerCtrl', ['$scope', 'meanData', '$rootScope',\r\n        function ($scope, meanData, $rootScope) {\r\n    $scope.year = new Date().getFullYear();\r\n  }]);\r\n\r\n  app.controller('mainCtrl', ['$scope', '$rootScope', function($scope, $rootScope){\r\n\r\n  }]);\r\n\r\n  app.directive('dateInput', function(){\r\n      return {\r\n          restrict : 'A',\r\n          scope : {\r\n              ngModel : '='\r\n          },\r\n          link: function (scope) {\r\n              if (scope.ngModel) scope.ngModel = new Date(scope.ngModel);\r\n          }\r\n      }\r\n  });\r\n})();\n(function(){\r\n\tapp.config(['$routeProvider', '$locationProvider',\r\n    function ($routeProvider, $locationProvider) {\r\n      $routeProvider\r\n        .when('/home', {\r\n          templateUrl: '/home/home.view.html',\r\n          controller: \"homeCtrl\"\r\n        })\r\n        .when('/prediction', {\r\n          templateUrl: \"/prediction/prediction.view.html\",\r\n          controller: \"predictionCtrl\",\r\n          controllerAs: \"Prediction\"\r\n        })\r\n        .when('/account', {\r\n          templateUrl: \"/account/account.view.html\",\r\n          controller: \"accountCtrl\",\r\n          controllerAs: \"Account\"\r\n        })\r\n        .when('/payment', {\r\n          templateUrl: \"/payment/payment.view.html\",\r\n          controller: \"paymentCtrl\",\r\n          controllerAs: \"Payment\"\r\n        })\r\n        .when('/account-default', {\r\n          templateUrl: \"/account-default/account-default.view.html\",\r\n          controller: \"accountDefaultCtrl\",\r\n          controllerAs: \"AccountDefault\"\r\n        })\r\n        .when('/settings', {\r\n          templateUrl: \"/settings/settings.view.html\",\r\n          controller: \"settingsCtrl\",\r\n          controllerAs: \"Settings\"\r\n        })\r\n        .otherwise('/');\r\n\r\n      $locationProvider.html5Mode(true);\r\n\r\n  }]);\r\n})();\n(function(){\r\n  app.controller('accountDefaultCtrl', ['$scope', 'meanData', '$uibModal', '$window',\r\n    function($scope, meanData, $uibModal, $window){\r\n    var _this = this;\r\n\r\n    _this.rewardRulesInDB;\r\n    _this.accountDefaultList;\r\n\r\n    _this.rewardStrategy = {\r\n      rewardCategory: [],\r\n      rewardRatio: 0\r\n    }\r\n\r\n    _this.rewardRule = {\r\n      rewardMax: -1,\r\n      redeemMin: -1,\r\n      startDate: new Date('11/11/1111'),\r\n      endDate: new Date('09/09/9999'),\r\n      rewardStrategy: _this.rewardStrategy\r\n    }\r\n\r\n    _this.newRewardRules = [];\r\n\r\n    _this.addRewardRuleRow = function() {\r\n      _this.newRewardRules.push(angular.copy(_this.rewardRule));\r\n    }\r\n\r\n    _this.deleteRewardRuleRow = function(index) {\r\n      _this.newRewardRules.splice(index, 1);\r\n    }\r\n\r\n    meanData.getAccountDefault().then(function(res){\r\n      _this.accountDefaultList = res.data.data;\r\n    });\r\n\r\n    meanData.getRewardRules().then(function(res){\r\n      _this.rewardRulesInDB = res.data.data;\r\n    });\r\n\r\n    _this.removeAccountDefault = function(id) {\r\n      meanData.deleteAccountDefault(id).then(function(res){\r\n        alert(res.data.msg);\r\n        $window.location.reload();\r\n      }, function(err){\r\n        console.error(err);\r\n      });\r\n    }\r\n\r\n    _this.submitAccountDefault = function(newAccountDefault) {\r\n      var selectedRewardRuleIdList = [];\r\n\r\n      _this.rewardRulesInDB.forEach(function(rrdb){\r\n        if(rrdb.isSelected)\r\n          selectedRewardRuleIdList.push(rrdb._id);\r\n      });\r\n\r\n      var obj = {\r\n        newAccountDefault: newAccountDefault,\r\n        selectedRewardRuleIdList: selectedRewardRuleIdList,\r\n        newRewardRules: _this.newRewardRules\r\n      }\r\n\r\n      meanData.addAccountDefault(obj).then(function(res){\r\n        alert(res.data.msg);\r\n        $window.location.reload();\r\n      }, function(err){\r\n        console.error(err.data);\r\n      });\r\n    };\r\n\r\n    _this.showRewardRuleModal = function(rewardRule){\r\n\t\t\t$uibModal.open({\r\n        animation: false,\r\n\t\t\t\ttemplateUrl: '/account-default/reward-rule.modal.view.html',\r\n\t\t\t\tcontroller: function(){\r\n          var _this = this;\r\n          _this.rewardRule = rewardRule;\r\n        },\r\n        controllerAs: 'RewardRuleModal',\r\n\t\t\t\tsize: 'lg'\r\n\t\t\t});\r\n\t\t};\r\n  }]);\r\n})();\n(function(){\r\n    app.controller(\"accountCtrl\", ['$scope', '$uibModal', 'mockService', '$sce', 'meanData', '$window',\r\n\t\tfunction($scope, $uibModal, mockService, $sce, meanData, $window){\r\n\t\t\r\n\t\t_this = this;\r\n\r\n\t\tmeanData.getAccounts().then(function(res){\r\n\t\t\t_this.accounts = res.data.data.accountsDetails;\r\n\t\t\t_this.accountUpdatedDate = res.data.data.date;\r\n\t\t});\r\n\r\n\t\t_this.removeAccount = function(id) {\r\n\t\t\tif($window.confirm(\"Do you want to delete account?\")){\r\n\t\t\t\tmeanData.deleteAccount(id).then(function(res){\r\n\t\t\t\t\talert(res.data.msg);\r\n\t\t\t\t\t$window.location.reload();\r\n\t\t\t\t}, function(err){\r\n\t\t\t\t\tconsole.error(err);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t_this.fastUpadteProperty = function(property, oldVal, account) {\r\n\t\t\tvar newVal = $window.prompt(\"Update \" + property, oldVal);\r\n\t\t\tif(newVal != null){\r\n\r\n\t\t\t\taccount[property] = newVal;\r\n\t\t\t\taccount.updatedDate = new Date();\r\n\r\n\t\t\t\tmeanData.updateAccount(account).then(function(res){\r\n\t\t\t\t\talert(res.data.msg);\r\n\t\t\t\t\t$window.location.reload();\r\n\t\t\t\t}, function(err){\t\r\n\t\t\t\t\tconsole.error(err);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t_this.showAccountModal = function(title, account){\r\n\t\t\t$uibModal.open({\r\n\t\t\t\ttemplateUrl: '/account/save/save.account.view.html',\r\n\t\t\t\tcontroller: 'saveAccountCtrl',\r\n\t\t\t\tcontrollerAs: 'SaveAccount',\r\n\t\t\t\tresolve: {\r\n\t\t\t\t\tsaveAccountPageTitle: function(){\r\n\t\t\t\t\t\treturn title;\r\n\t\t\t\t\t},\r\n\t\t\t\t\taccount: function() {\r\n\t\t\t\t\t\treturn account;\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\tsize: 'lg'\r\n\t\t\t});\r\n\r\n\t\t};\r\n  }]);\r\n})();\n(function(){\r\n  app.controller(\"homeCtrl\", ['$scope', function($scope){\r\n\r\n  }]);\r\n})();\n(function(){\r\n  app.controller('settingsCtrl', ['$scope', 'meanData', '$window', \r\n    function($scope, meanData, $window){\r\n    var _this = this;\r\n    _this.settings;\r\n    _this.canTransaction;\r\n\r\n    meanData.getSettings().then(function(res){\r\n      _this.settings = res.data.data[0];\r\n      _this.settings.accountConfirmDate = new Date(res.data.data[0].accountConfirmDate);\r\n    });\r\n\r\n    _this.updateSettings = function() {\r\n      meanData.updateSettings(_this.settings).then(function(res){\r\n        alert(res.data.msg);\r\n        $window.location.reload();\r\n      });\r\n    }\r\n\r\n    _this.canHasTransaction = function(transaction){\r\n      meanData.canHasTransaction(transaction).then(function(res){\r\n        if(res.data.length == 0)\r\n          return alert(\"You can't has this transaction\");\r\n        _this.avaliableAccounts = res.data;\r\n      });\r\n    }\r\n  }]);\r\n})();\n(function(){\r\n\tapp.controller(\"paymentCtrl\", ['$scope', '$uibModal', '$log', 'meanData', '$window',\r\n\tfunction($scope, $uibModal, $log, meanData, $window){\r\n\t\tvar _this = this;\r\n\r\n\t\t_this.showAddTransaction = function() {\r\n\t\t\t$uibModal.open({\r\n\t\t\t\ttemplateUrl: '/payment/save/transaction/transaction.view.html',\r\n\t\t\t\tcontroller: 'transactionCtrl',\r\n\t\t\t\tcontrollerAs: 'Transaction',\r\n\t\t\t\tsize: 'lg'\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t_this.showAddRecurring = function() {\r\n\t\t\t$uibModal.open({\r\n\t\t\t\ttemplateUrl: '/payment/save/recurring-payment/recurring-payment.view.html',\r\n\t\t\t\tcontroller: 'recurringPaymentCtrl',\r\n\t\t\t\tcontrollerAs: 'RecurringPayment',\r\n\t\t\t\tsize: 'lg'\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t_this.removeTransaction = function(id) {\r\n\t\t\tmeanData.deleteTransaction(id).then(function(res){\r\n\t\t\t\talert(res.data.msg);\r\n\t\t\t\t$window.location.reload();\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t_this.removeRecurring = function(id) {\r\n\t\t\tmeanData.deleteRecurringPayment(id).then(function(res){\r\n\t\t\t\talert(res.data.msg);\r\n\t\t\t\t$window.location.reload();\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tmeanData.getRecurringPayments().then(function(res){\r\n\t\t\t_this.recurringPayments = res.data.data;\r\n\t\t});\r\n\r\n\t\tmeanData.getTransactions().then(function(res){\r\n\t\t\t_this.transactioins = res.data.data;\r\n\t\t});\r\n\t}]);\r\n})();\n(function(){\r\n\tapp.controller('predictionCtrl', ['$scope', 'utilService', 'mockService', '$q', '$uibModal', 'meanData',\r\n\t\tfunction($scope, utilService, mockService, $q, $uibModal, meanData){\r\n\t\tvar _this = this;\r\n\t\t// initial controller level val here...\r\n\t\t_this.showStatements = false;\r\n\t\t_this.events;\r\n\t\t_this.financeDangerDate;\r\n\t\t_this.statements;\r\n\t\t_this.calendarDisplayerOptions = {};  // Calendar Settings\r\n\t\t// ngModel can't handle moment object, so still using Date object here...\r\n\t\t_this.selectedDate = new Date();\r\n\t\t_this.endDate = new Date(new Date().getFullYear(), new Date().getMonth() + 1, new Date().getDate());\r\n\r\n\t\tvar getDayClass = function(data) {\r\n\t\t\tvar date = data.date;\r\n\t\t\tvar mode = data.mode;\r\n\t\t\tif(mode === 'day') {\r\n\t\t\t\tvar dayToCheck = new Date(date).setHours(0,0,0,0);\r\n\t\t\t\tfor(var i = 0; i < _this.events.length; i++){\r\n\t\t\t\t\tvar eventDay = new Date(_this.events[i].date).setHours(0,0,0,0);\r\n\t\t\t\t\tif(dayToCheck === eventDay) {\r\n\t\t\t\t\t\treturn _this.events[i].financeStatus;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn '';\r\n\t\t}\r\n\r\n\t\tvar showSelectedDateModal = function(statement) {\r\n\t\t\t$uibModal.open({\r\n\t\t\t\ttemplateUrl: '/prediction/statement.modal.html',\r\n\t\t\t\tcontroller: function(){\r\n\t\t\t\t\tvar _this = this;\r\n\t\t\t\t\t_this.statement = statement;\r\n\t\t\t\t},\r\n\t\t\t\tcontrollerAs: \"showSelectedDateModalCtrl\",\r\n\t\t\t\tsize: 'lg'\r\n\t\t\t}).result.then(function () {\r\n\t\t\t\t\r\n\t\t\t}, function () {\r\n\t\t\t\t\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t_this.calculatePending = function(account) {\r\n\t\t\taccount.pending = 0;\r\n\t\t\taccount.pendingTransactions.forEach(function(pt){\r\n\t\t\t\taccount.pending += pt.amount;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t_this.doPredict = function(startDate, endDate) {\r\n\t\t\tif(typeof startDate === 'undefined' || startDate === null || startDate == '')\r\n\t\t\t\tstartDate = moment();\r\n\t\t\tif(typeof endDate === 'undefined' || endDate === null || endDate == '')\r\n\t\t\t\tendDate = moment();\r\n\t\t\t\r\n\t\t\tstartDate = utilService.dateFormat(startDate, 1);\r\n\t\t\tendDate = utilService.dateFormat(endDate, 1);\r\n\r\n\t\t\tmeanData.doFinancialPrediction(startDate, endDate).then(function(res){\r\n\t\t\t\t_this.events = res.data.events;\r\n\t\t\t\t_this.financeDangerDate = res.data.financeDangerDate;\r\n\t\t\t\t_this.statements = res.data.statements;\r\n\t\t\t\t_this.lowestBalanceInAccountList = res.data.lowestBalanceInAccountList;\r\n\r\n\t\t\t\t_this.calendarDisplayerOptions = {\r\n\t\t\t\t\tcustomClass: getDayClass,\r\n\t\t\t\t\tminDate: new Date(startDate),\r\n\t\t\t\t\tmaxDate: new Date(endDate)\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t_this.dateSelected = function(date) {\r\n\t\t\tfor(var i = 0; i < _this.statements.length; i++) {\r\n\t\t\t\tif(_this.statements[i].date === utilService.dateFormat(date, 0)) {\r\n\t\t\t\t\tshowSelectedDateModal(_this.statements[i]);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t/*\r\n\t\t// TODO: It may cause infinite changes.... After changes, the index may change...\r\n\r\n\t\t$scope.deleteTransaction = function(parentIndex, index, startDate, endDate) {\r\n\t\t\tgetAccountsAndPaymentsData().then(function(res){\r\n\t\t\t\tres[1].splice(index, 1);\r\n\t\t\t\tdoPredict(startDate, endDate, res[0], res[1], res[2]);\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\t$scope.addTransactions = function(startDate, endDate) {\r\n\t\t\tvar transactions = mockService.getMockTransactions;\r\n\r\n\t\t\tgetAccountsAndPaymentsData().then(function(res){\r\n\t\t\t\ttransactions.forEach(function(transaction){\r\n\t\t\t\t\tres[1].push(transaction);\r\n\t\t\t\t});\r\n\t\t\t\tdoPredict(startDate, endDate, res[0], res[1], res[2], res[3]);\r\n\t\t\t});\r\n\t\t}*/\r\n\r\n\t\t_this.doPredict(undefined, _this.endDate);\r\n\t}]);\r\n})();\n(function(){\r\n    app.controller(\"saveAccountCtrl\", ['$scope', 'saveAccountPageTitle', 'account', '$uibModalInstance', 'meanData', '$window',\r\n        function($scope, saveAccountPageTitle, account, $uibModalInstance, meanData, $window){\r\n        // initial data here...\r\n        var _this = this;\r\n        _this.account = account;\r\n        _this.nAccount = {};\r\n        _this.nAccount.pendingTransactions = [];\r\n        _this.saveAccountFlag = {};\r\n        _this.saveAccountPageTitle = saveAccountPageTitle;\r\n        _this.transactionCategoryList = [];\r\n        _this.accountDefault;\r\n        _this.payByAccounts;\r\n\r\n        var setSaveAccountFlag = function(bool) {\r\n            if(typeof bool !== 'boolean')\r\n                return;\r\n            _this.saveAccountFlag = {\r\n                \"accountName\": bool,\r\n                \"dueDate\": bool,\r\n                \"closingDate\": bool,\r\n                \"minPayment\": bool,\r\n                \"creditLine\": bool,\r\n                \"balance\": bool,\r\n                \"lastBalance\": bool,\r\n                \"threshold\": bool,\r\n                \"resetEdit\": bool,\r\n                \"resetSubmit\": !bool,\r\n                \"submit\": !bool,\r\n                \"edit\": bool,\r\n                \"apr0Valid\": bool,\r\n                \"apr0Date\": bool,\r\n                \"pendingTransactions\": bool,\r\n                \"rewards\": bool,\r\n                \"rewardRules\": bool,\r\n                \"payBy\": bool,\r\n            };\r\n        }\r\n\r\n        var newPendingTransaction = {\r\n            type: \"Debit\",\r\n            category: null,\r\n            description: null,\r\n            date: null,\r\n            amount: 0\r\n        }\r\n\r\n        _this.addPendingTransactionRow = function() {\r\n            _this.nAccount.pendingTransactions.push(angular.copy(newPendingTransaction));\r\n        }\r\n\r\n        _this.deletePendingTransactionRow = function(index) {\r\n            _this.nAccount.pendingTransactions.splice(index, 1);\r\n        }\r\n\r\n        _this.updateAccount = function(account) {\r\n            meanData.updateAccount(account).then(function(res){\r\n                alert(res.data.msg);\r\n                $window.location.reload();\r\n            }, function(err){\r\n                console.error(err);\r\n            });\r\n        }\r\n\r\n        _this.addAccount = function(account) {\r\n            meanData.addAccount(account).then(function(res){\r\n                alert(res.data.msg);\r\n                $window.location.reload();\r\n            },function(err){\r\n                console.error(err.data.message);\r\n                console.error(err.data);\r\n            });\r\n            _this.cancelModal();\r\n        }\r\n\r\n        _this.cancelModal = function() {\r\n            $uibModalInstance.dismiss('cancel');\r\n        }\r\n\r\n        _this.resetEdit = function(editAccount, origin) {\r\n            Object.keys(editAccount).forEach(function(prop){\r\n                editAccount[prop] = origin[prop];\r\n            });\r\n        }\r\n\r\n        _this.selectedAccountDefault = function() {\r\n            _this.accountDefault.forEach(function(ad){\r\n                if(ad.accountName === _this.nAccount.accountName) {\r\n                    _this.nAccount.type = ad.type;\r\n                    _this.nAccount.rewardRules = [];\r\n                    ad.rewardRules.forEach(function(adRewardRule){\r\n                        _this.nAccount.rewardRules.push({\r\n                            rule: adRewardRule,\r\n                            earned: 0,\r\n                            startDate: new Date(adRewardRule.startDate),\r\n                            endDate: new Date(adRewardRule.endDate)\r\n                        });\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n        _this.deleteAccount = function(account) {\r\n            meanData.deleteAccountDefault(account._id).then(function(res){\r\n                // after delete\r\n            });\r\n        }\r\n\r\n        // edit or check account details\r\n        if(account) {\r\n            setSaveAccountFlag(true);\r\n            // date format\r\n            _this.account = angular.copy(account);\r\n            _this.nAccount = angular.copy(account);\r\n        } else {\r\n            // add new account\r\n            setSaveAccountFlag(false);\r\n        }\r\n\r\n        meanData.getAccountDefault().then(function(ad){\r\n            _this.accountDefault = ad.data.data;\r\n        });\r\n        meanData.getAccountsNotCreditCard().then(function(ancc){\r\n            _this.payByAccounts = ancc.data.data;\r\n        });\r\n        meanData.getSettings('transactionCategory').then(function(tc){\r\n            _this.transactionCategoryList = tc.data.data[0].transactionCategory;\r\n        });\r\n    }]);\r\n})();\n(function () {\r\n  app.service('meanData', ['$http',\r\n      function meanData($http) {\r\n    \r\n    var _this = this;\r\n    \r\n    _this.financialServerUrl = '/rest/finance';\r\n\r\n    var doFinancialPrediction = function(startDate, endDate) {\r\n      return $http.get(_this.financialServerUrl + '/predict?sd=' + startDate + '&ed=' + endDate);\r\n    }\r\n\r\n    var canHasTransaction = function(transaction) {\r\n      return $http.put(_this.financialServerUrl + '/predict/trans', transaction);\r\n    }\r\n\r\n    /* Recurring Payment */\r\n    var getRecurringPayments = function() {\r\n      return $http.get(_this.financialServerUrl + '/recurring');\r\n    }\r\n\r\n    var addRecurringPayment = function(recurring) {\r\n      return $http.post(_this.financialServerUrl + '/recurring', recurring);\r\n    }\r\n\r\n    var updateRecurringPayment = function(recurring) {\r\n      return $http.put(_this.financialServerUrl + '/recurring', recurring);\r\n    }\r\n\r\n    var deleteRecurringPayment = function(id) {\r\n      return $http.delete(_this.financialServerUrl + '/recurring/' + id);\r\n    }\r\n\r\n    /* Transaction */\r\n    var getTransactions = function(isPending) {\r\n      return $http.get(_this.financialServerUrl + '/transaction?isPending' + isPending);\r\n    }\r\n\r\n    var addTransaction = function(transaction) {\r\n      return $http.post(_this.financialServerUrl + '/transaction', transaction);\r\n    }\r\n\r\n    var updateTransaction = function(transaction) {\r\n      return $http.put(_this.financialServerUrl + '/transaction', transaction);\r\n    }\r\n\r\n    var deleteTransaction = function(id) {\r\n      return $http.delete(_this.financialServerUrl + '/transaction/' + id);\r\n    }\r\n\r\n    /* Account */\r\n    var getAccounts = function() {\r\n      return $http.get(_this.financialServerUrl + '/account');\r\n    }\r\n\r\n    var addAccount = function(account) {\r\n      return $http.post(_this.financialServerUrl + '/account', account);\r\n    }\r\n\r\n    var updateAccount = function(account) {\r\n      return $http.put(_this.financialServerUrl + '/account', account);\r\n    }\r\n\r\n    var deleteAccount = function(id) {\r\n      return $http.delete(_this.financialServerUrl + '/account/' + id);\r\n    }\r\n\r\n    var getAccountsNotCreditCard = function() {\r\n      return $http.get(_this.financialServerUrl + '/account/not-cc');\r\n    }\r\n\r\n    /* Account Default */\r\n    var getAccountDefault = function() {\r\n      return $http.get(_this.financialServerUrl + '/account-default');\r\n    }\r\n\r\n    var addAccountDefault = function(accountDefault) {\r\n      return $http.post(_this.financialServerUrl + '/account-default', accountDefault);\r\n    }\r\n\r\n    var deleteAccountDefault = function(id) {\r\n      return $http.delete(_this.financialServerUrl + '/account-default/' + id);\r\n    }\r\n\r\n    /* Reward Rule */\r\n    var getRewardRules = function() {\r\n      return $http.get(_this.financialServerUrl + '/reward-rule');\r\n    }\r\n\r\n    var addRewardRule = function(rewardRule) {\r\n      return $http.post(_this.financialServerUrl + '/reward-rule', rewardRule);\r\n    }\r\n\r\n    var updateRewardRule = function(rewardRule) {\r\n      return $http.put(_this.financialServerUrl + '/reward-rule', rewardRule);\r\n    }\r\n\r\n    var deleteRewardRule = function(id) {\r\n      return $http.delete(_this.financialServerUrl + '/reward-rule/', id);\r\n    }\r\n\r\n    /* Setting */\r\n    var getSettings = function(need) {\r\n      return $http.get(_this.financialServerUrl + '/settings?need=' + need);\r\n    }\r\n\r\n    var updateSettings = function(settings) {\r\n      return $http.put(_this.financialServerUrl + '/settings', settings);\r\n    }\r\n\r\n    return {\r\n      doFinancialPrediction: doFinancialPrediction,\r\n      getRecurringPayments: getRecurringPayments,\r\n      addRecurringPayment: addRecurringPayment,\r\n      deleteRecurringPayment: deleteRecurringPayment,\r\n      getTransactions: getTransactions,\r\n      addTransaction: addTransaction,\r\n      updateTransaction: updateTransaction,\r\n      deleteTransaction: deleteTransaction,\r\n      getAccountDefault: getAccountDefault,\r\n      addAccountDefault: addAccountDefault,\r\n      deleteAccountDefault: deleteAccountDefault,\r\n      getAccounts: getAccounts,\r\n      addAccount: addAccount,\r\n      updateAccount: updateAccount,\r\n      deleteAccount: deleteAccount,\r\n      getRewardRules: getRewardRules,\r\n      addRewardRule: addRewardRule,\r\n      updateRewardRule: updateRewardRule,\r\n      deleteRewardRule: deleteRewardRule,\r\n      getAccountsNotCreditCard: getAccountsNotCreditCard,\r\n      getSettings: getSettings,\r\n      updateSettings: updateSettings,\r\n      canHasTransaction: canHasTransaction\r\n    }\r\n  }])\r\n})();\n(function(){\r\n  app.service('mockService', ['utilService', function(utilService){\r\n    var getMockTransactions = [\r\n      {\r\n        type: \"Debit\",\r\n        description: \"Mock Tran 1\",\r\n        date: \"2/19/2017\",\r\n        amount: 1200,\r\n        accountName: \"Citi Double Cash\"\r\n      },\r\n      {\r\n        type: \"Credit\",\r\n        description: \"Mock Tran 2\",\r\n        date: \"3/3/2017\",\r\n        amount: 55,\r\n        accountName: \"Citi Check\"\r\n      },\r\n      {\r\n        type: \"Debit\",\r\n        description: \"Mock Tran 3\",\r\n        date: \"3/4/2017\",\r\n        amount: 7777,\r\n        accountName: \"Chase Amazon Prime\"\r\n      },\r\n    ]\r\n\r\n    return {\r\n      getMockTransactions: getMockTransactions\r\n    }\r\n  }]);\r\n})();\n(function(){\r\n  app.service('utilService', [function(){\r\n    // flag -1: return moment object\r\n\t\t// flag 0: return string; add weekday, 2/17/2017 Tuesday\r\n\t\t// flag 1: return string; month day year, 2/2/2017\r\n\t\tvar dateFormat = function(date, flag){\r\n\t\t\tif(flag === -1) \r\n\t\t\t\treturn moment(new Date(date));\r\n\r\n\t\t\tif (date instanceof Date) {\r\n\t\t\t\tif(typeof flag === 'undefined')\r\n\t\t\t\t\treturn moment(date).format('MM/DD/YYYY');\r\n\t\t\t\tif (flag === 0)\r\n\t\t\t\t\treturn moment(date).format('MM/DD/YYYY, dddd');\r\n\t\t\t\tif (flag === 1)\r\n\t\t\t\t\treturn moment(date).format('MM/DD/YYYY');\r\n\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\tif (date instanceof moment) {\r\n\t\t\t\tif(typeof flag === 'undefined')\r\n\t\t\t\t\treturn date.format('MM/DD/YYYY');\r\n\t\t\t\tif (flag === 0)\r\n\t\t\t\t\treturn date.format('MM/DD/YYYY, dddd');\r\n\t\t\t\tif (flag === 1)\r\n\t\t\t\t\treturn date.format('MM/DD/YYYY');\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn console.log(\"Can't regonize...\");\r\n\t\t}\r\n\t\t\r\n\t\tvar accountType = function(type) {\r\n\t\t\tif (type === 'cc')\r\n\t\t\t\treturn 'CreditCard';\r\n\t\t\tif(type === 'cash')\r\n\t\t\t\treturn 'Cash';\r\n\t\t\tif(type === 'checking')\r\n\t\t\t\treturn 'Checking';\r\n\t\t\tif(type === 'saving')\r\n\t\t\t\treturn 'Saving';\r\n\t\t}\r\n\r\n\t\tvar transactionType = function(type) {\r\n\t\t\tif(type === 'debit')\r\n\t\t\t\treturn 'Debit';\r\n\t\t\tif(type === 'credit')\r\n\t\t\t\treturn 'Credit';\r\n\t\t}\r\n\r\n    return {\r\n      dateFormat: dateFormat,\r\n\t\t\taccountType: accountType,\r\n\t\t\ttransactionType: transactionType\r\n    }\r\n  }]);\r\n})();\n(function () {\r\n  app.directive('navigation', function () {\r\n    return {\r\n      restrict: 'EA',\r\n      templateUrl: '/common/directives/navigation/navigation.view.html'\r\n    }\r\n  });\r\n\r\n  app.controller('navCtrl', ['$scope', '$location', '$window', '$rootScope',\r\n  function($scope, $location, $window, $rootScope){\r\n\t\r\n    $rootScope.isActive = function(viewLocation){\r\n      if(viewLocation === '/')\r\n        return $location.path() === viewLocation;\r\n        for(var i = 0; i < $location.path().split('/').length; i++) {\r\n          if($location.path().split('/')[i] === viewLocation)\r\n            return true;\r\n        }\r\n      return false;\r\n    };\r\n  }])\r\n})();\n(function(){\r\n    app.controller(\"transactionCtrl\", ['$scope', '$uibModalInstance', 'meanData', '$window',\r\n        function($scope, $uibModalInstance, meanData, $window){\r\n\r\n        var _this = this;\r\n        _this.transactionCategoryList;\r\n        _this.accounts;\r\n        _this.newTransaction = {};\r\n\r\n        meanData.getSettings('transactionCategory').then(function(res){\r\n            _this.transactionCategoryList = res.data.data[0].transactionCategory;\r\n        });\r\n\r\n        meanData.getAccounts().then(function(res){\r\n            _this.accounts = res.data.data.accountsDetails;\r\n        });\r\n\r\n        _this.submit = function() {\r\n            meanData.addTransaction(_this.newTransaction).then(function(res){\r\n                alert(res.data.msg);\r\n                $window.location.reload();\r\n            }, function(err){\r\n                console.error(err);\r\n            });\r\n        }\r\n\r\n        _this.cancelModal = function() {\r\n            $uibModalInstance.dismiss('cancel');\r\n        }\r\n    }]);\r\n})();\n(function(){\r\n    app.controller(\"recurringPaymentCtrl\", ['$scope', '$uibModalInstance', 'meanData', '$window',\r\n        function($scope, $uibModalInstance, meanData, $window){\r\n        \r\n        var _this = this;\r\n        _this.newRecurringPayment = {};\r\n        _this.transactionCategoryList;\r\n        _this.accounts;\r\n\r\n        meanData.getSettings('transactionCategory').then(function(res){\r\n            _this.transactionCategoryList = res.data.data[0].transactionCategory;\r\n        });\r\n\r\n        meanData.getAccounts().then(function(res){\r\n            _this.accounts = res.data.data.accountsDetails;\r\n        });\r\n\r\n        _this.submit = function() {\r\n            meanData.addRecurringPayment(_this.newRecurringPayment).then(function(res){\r\n                alert(res.data.msg);\r\n                $window.location.reload();\r\n            }, function(err){\r\n                console.error(err);\r\n            });\r\n        }\r\n\r\n        _this.cancelModal = function() {\r\n            $uibModalInstance.dismiss('cancel');\r\n        }\r\n    }]);\r\n})();\n(function(){\r\n    app.component('inputAmount', {\r\n        templateUrl: \"/common/components/input/amount/amount.view.html\",\r\n        controller: function testController(){\r\n\r\n        },\r\n        bindings: {\r\n            readonly: '=',\r\n            data: '='\r\n        }\r\n    });\r\n})();"]}